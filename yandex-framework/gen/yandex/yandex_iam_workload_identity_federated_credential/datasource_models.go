// Code generated by tfgen. DO NOT EDIT.

package yandex_iam_workload_identity_federated_credential

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	workload "github.com/yandex-cloud/go-genproto/yandex/cloud/iam/v1/workload"
)

type yandexIamWorkloadIdentityFederatedCredentialDatasourceModel struct {
	CreatedAt             types.String   `tfsdk:"created_at"`
	ExternalSubjectId     types.String   `tfsdk:"external_subject_id"`
	FederatedCredentialId types.String   `tfsdk:"federated_credential_id"`
	ID                    types.String   `tfsdk:"id"`
	FederationId          types.String   `tfsdk:"federation_id"`
	ServiceAccountId      types.String   `tfsdk:"service_account_id"`
	Timeouts              timeouts.Value `tfsdk:"timeouts"`
}

func NewYandexIamWorkloadIdentityFederatedCredentialDatasourceModel() yandexIamWorkloadIdentityFederatedCredentialDatasourceModel {
	return yandexIamWorkloadIdentityFederatedCredentialDatasourceModel{
		CreatedAt:             types.StringNull(),
		ExternalSubjectId:     types.StringNull(),
		FederatedCredentialId: types.StringNull(),
		ID:                    types.StringNull(),
		FederationId:          types.StringNull(),
		ServiceAccountId:      types.StringNull(),
	}
}

var yandexIamWorkloadIdentityFederatedCredentialDatasourceModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"created_at":              types.StringType,
		"external_subject_id":     types.StringType,
		"federated_credential_id": types.StringType,
		"id":                      types.StringType,
		"federation_id":           types.StringType,
		"service_account_id":      types.StringType,
		"timeouts":                timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexIamWorkloadIdentityFederatedCredentialDatasource(ctx context.Context,
	yandexIamWorkloadIdentityFederatedCredentialDatasource *workload.FederatedCredential,
	state yandexIamWorkloadIdentityFederatedCredentialDatasourceModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexIamWorkloadIdentityFederatedCredentialDatasource == nil {
		return types.ObjectNull(yandexIamWorkloadIdentityFederatedCredentialDatasourceModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexIamWorkloadIdentityFederatedCredentialDatasourceModelType.AttrTypes, yandexIamWorkloadIdentityFederatedCredentialDatasourceModel{
		CreatedAt:             types.StringValue(yandexIamWorkloadIdentityFederatedCredentialDatasource.GetCreatedAt().AsTime().Format(time.RFC3339)),
		ExternalSubjectId:     types.StringValue(yandexIamWorkloadIdentityFederatedCredentialDatasource.GetExternalSubjectId()),
		FederatedCredentialId: types.StringValue(yandexIamWorkloadIdentityFederatedCredentialDatasource.GetId()),
		ID:                    types.StringValue(yandexIamWorkloadIdentityFederatedCredentialDatasource.GetId()),
		FederationId:          types.StringValue(yandexIamWorkloadIdentityFederatedCredentialDatasource.GetFederationId()),
		ServiceAccountId:      types.StringValue(yandexIamWorkloadIdentityFederatedCredentialDatasource.GetServiceAccountId()),
		Timeouts:              to,
	})
	diags.Append(diag...)
	return value
}
