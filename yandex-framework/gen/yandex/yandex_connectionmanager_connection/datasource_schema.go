// Code generated by tfgen. DO NOT EDIT.

package yandex_connectionmanager_connection

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func YandexConnectionmanagerConnectionDatasourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Description:         "A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }",
		MarkdownDescription: "A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }",
		Attributes: map[string]schema.Attribute{

			"can_use": schema.BoolAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.can_use
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"connection_id": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.id
					// -> yandex.cloud.connectionmanager.v1.GetConnectionRequest.connection_id
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection_service.proto\n",
				Optional: true,
				Computed: true,
			},

			"id": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.id
					// -> yandex.cloud.connectionmanager.v1.GetConnectionRequest.connection_id
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection_service.proto\n",
				Optional: true,
				Computed: true,
			},

			"created_at": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.created_at
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"created_by": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.created_by
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"description": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.description
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"folder_id": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.folder_id
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Optional: true,
				Computed: true,
			},

			"is_managed": schema.BoolAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.is_managed
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"labels": schema.MapAttribute{
				ElementType:         types.StringType,
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.labels
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"lockbox_secret": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"connection_id": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.id
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"id": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.id
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,
					},

					"newest_version": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.newest_version
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"version": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.version
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},
				},
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secret
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"name": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.name
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"params": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"clickhouse": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Computed: true,
												},

												"http_port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.http_port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Computed: true,
												},

												"shard_name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.shard_name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Computed: true,
												},

												"tcp_port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.tcp_port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Computed: true,
									},

									"shard_groups": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Computed: true,
												},

												"shard_names": schema.ListAttribute{
													ElementType:         types.StringType,
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.shard_names
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groups
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Computed: true,
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouse
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"greenplum": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"coordinator_hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Computed: true,
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Computed: true,
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplum
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"kafka": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"disabled": schema.SingleNestedAttribute{

										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.disabled
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Computed: true,
									},

									"sasl": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
												Computed: true,
											},

											"supported_mechanisms": schema.ListAttribute{
												ElementType:         types.StringType,
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.supported_mechanisms
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.sasl
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafka
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"mongodb": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"auth_source": schema.StringAttribute{
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.auth_source
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Computed: true,
									},

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Computed: true,
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Computed: true,
												},

												"type": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.type
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Computed: true,
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodb
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"mysql": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Computed: true,
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Computed: true,
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysql
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"opensearch": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Computed: true,
												},

												"roles": schema.ListAttribute{
													ElementType:         types.StringType,
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.roles
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearch
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"postgresql": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Computed: true,
												},

												"replica_type": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.replica_type
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Computed: true,
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Computed: true,
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresql
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"redis": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Computed: true,
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Computed: true,
												},

												"shard_name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.shard_name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Computed: true,
									},

									"sentinel_port": schema.Int64Attribute{
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.sentinel_port
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
								Computed: true,
							},

							"databases": schema.ListAttribute{
								ElementType:         types.Int64Type,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redis
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"trino": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"coordinator": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"host": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.host
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
												Computed: true,
											},

											"port": schema.Int64Attribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.port
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinator
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trino
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"valkey": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Computed: true,
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Computed: true,
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed:  true,
														Sensitive: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
												Computed: true,
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Computed: true,
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Computed: true,
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Computed: true,
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Computed: true,
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Computed: true,
												},

												"shard_name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.shard_name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Computed: true,
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Computed: true,
									},

									"sentinel_port": schema.Int64Attribute{
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.sentinel_port
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Computed: true,
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Computed: true,
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Computed: true,
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Computed: true,
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Computed: true,
							},

							"databases": schema.ListAttribute{
								ElementType:         types.Int64Type,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Computed: true,
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Computed: true,
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkey
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},
				},
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.params
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"updated_at": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.updated_at
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},
			"timeouts": timeouts.AttributesAll(ctx),
		},

		Blocks: map[string]schema.Block{},
	}
}
