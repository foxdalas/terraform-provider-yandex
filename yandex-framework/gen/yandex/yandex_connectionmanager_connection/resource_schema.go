// Code generated by tfgen. DO NOT EDIT.

package yandex_connectionmanager_connection

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/mapvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/objectvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/mapplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	connectionmanager "github.com/yandex-cloud/go-genproto/yandex/cloud/connectionmanager/v1"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/converter"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/planmodifiers"
)

func YandexConnectionmanagerConnectionResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Description:         "A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }",
		MarkdownDescription: "A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }",
		Version:             1,
		Attributes: map[string]schema.Attribute{

			"can_use": schema.BoolAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.can_use
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"connection_id": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.id
					// -> yandex.cloud.connectionmanager.v1.DeleteConnectionRequest.connection_id
					// -> yandex.cloud.connectionmanager.v1.GetConnectionRequest.connection_id
					// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.connection_id
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection_service.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},

			"id": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.id
					// -> yandex.cloud.connectionmanager.v1.DeleteConnectionRequest.connection_id
					// -> yandex.cloud.connectionmanager.v1.GetConnectionRequest.connection_id
					// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.connection_id
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection_service.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},

			"created_at": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.created_at
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"created_by": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.created_by
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"description": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.description
					// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.description
					// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.description
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},

			"folder_id": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.folder_id
					// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.folder_id
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},

			"is_managed": schema.BoolAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.is_managed
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"labels": schema.MapAttribute{
				ElementType:         types.StringType,
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.labels
					// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.labels
					// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.labels
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.Map{
					mapplanmodifier.UseStateForUnknown(),
					planmodifiers.NilRelaxedMap(),
				},
				Validators: []validator.Map{
					mapvalidator.ValueStringsAre(),
				},
			},

			"lockbox_secret": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"connection_id": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.id
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"id": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.id
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,
					},

					"newest_version": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.newest_version
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},

					"version": schema.StringAttribute{
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secretyandex.cloud.connectionmanager.v1.LockboxSecret.version
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Computed: true,
					},
				},
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.lockbox_secret
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},

			"name": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.name
					// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.name
					// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.name
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},

			"params": schema.SingleNestedAttribute{

				Attributes: map[string]schema.Attribute{

					"clickhouse": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.authyandex.cloud.connectionmanager.v1.ClickHouseAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.ClickHouseCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"http_port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.http_port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.http_port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.http_port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"shard_name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.shard_name
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.shard_name
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.shard_name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"tcp_port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.tcp_port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.tcp_port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hostsyandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.tcp_port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"shard_groups": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.name
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.name
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"shard_names": schema.ListAttribute{
													ElementType:         types.StringType,
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.shard_names
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.shard_names
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groupsyandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup.shard_names
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.List{
														listplanmodifier.UseStateForUnknown(),
														planmodifiers.NilRelaxedList(),
													},
													Validators: []validator.List{
														listvalidator.ValueStringsAre(),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groups
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groups
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.shard_groups
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.clusteryandex.cloud.connectionmanager.v1.ClickHouseCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.databases
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.databases
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.List{
									listplanmodifier.UseStateForUnknown(),
									planmodifiers.NilRelaxedList(),
								},
								Validators: []validator.List{
									listvalidator.ValueStringsAre(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouseyandex.cloud.connectionmanager.v1.ClickHouseConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/clickhouse.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouse
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouse
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.clickhouse
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"greenplum": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.authyandex.cloud.connectionmanager.v1.GreenplumAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"coordinator_hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.GreenplumCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hostsyandex.cloud.connectionmanager.v1.GreenplumCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.GreenplumCluster_Host_Role_value)...),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.coordinator_hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.clusteryandex.cloud.connectionmanager.v1.GreenplumCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.databases
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.databases
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.List{
									listplanmodifier.UseStateForUnknown(),
									planmodifiers.NilRelaxedList(),
								},
								Validators: []validator.List{
									listvalidator.ValueStringsAre(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplumyandex.cloud.connectionmanager.v1.GreenplumConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/greenplum.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplum
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplum
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.greenplum
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
							),
						},
					},

					"kafka": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"disabled": schema.SingleNestedAttribute{

										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.disabled
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.disabled
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.disabled
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
										Validators: []validator.Object{
											objectvalidator.ConflictsWith(
												path.MatchRelative().AtParent().AtName("sasl"),
											),
										},
									},

									"sasl": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"supported_mechanisms": schema.ListAttribute{
												ElementType:         types.StringType,
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.supported_mechanisms
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.supported_mechanisms
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.supported_mechanisms
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.List{
													listplanmodifier.UseStateForUnknown(),
													planmodifiers.NilRelaxedList(),
												},
												Validators: []validator.List{
													listvalidator.ValueStringsAre(
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.KafkaSaslSecurity_Mechanism_value)...),
													),
													listvalidator.ValueStringsAre(
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.KafkaSaslSecurity_Mechanism_value)...),
													),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.saslyandex.cloud.connectionmanager.v1.KafkaSaslSecurity.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.sasl
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.sasl
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.authyandex.cloud.connectionmanager.v1.KafkaAuth.sasl
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
										Validators: []validator.Object{
											objectvalidator.ConflictsWith(
												path.MatchRelative().AtParent().AtName("disabled"),
											),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.KafkaCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hostsyandex.cloud.connectionmanager.v1.KafkaCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.clusteryandex.cloud.connectionmanager.v1.KafkaCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafkayandex.cloud.connectionmanager.v1.KafkaConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/kafka.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafka
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafka
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.kafka
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"mongodb": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"auth_source": schema.StringAttribute{
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.auth_source
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.auth_source
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.auth_source
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.String{
											stringplanmodifier.UseStateForUnknown(),
										},
									},

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.authyandex.cloud.connectionmanager.v1.MongoDBAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.MongoDBCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.MongoDBCluster_Host_Role_value)...),
													},
												},

												"type": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.type
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.type
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hostsyandex.cloud.connectionmanager.v1.MongoDBCluster.Host.type
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.MongoDBCluster_Host_Type_value)...),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.clusteryandex.cloud.connectionmanager.v1.MongoDBCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.databases
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.databases
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.List{
									listplanmodifier.UseStateForUnknown(),
									planmodifiers.NilRelaxedList(),
								},
								Validators: []validator.List{
									listvalidator.ValueStringsAre(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodbyandex.cloud.connectionmanager.v1.MongoDBConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mongodb.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodb
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodb
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mongodb
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"mysql": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.authyandex.cloud.connectionmanager.v1.MySQLAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.MySQLCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hostsyandex.cloud.connectionmanager.v1.MySQLCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.MySQLCluster_Host_Role_value)...),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.clusteryandex.cloud.connectionmanager.v1.MySQLCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.databases
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.databases
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.List{
									listplanmodifier.UseStateForUnknown(),
									planmodifiers.NilRelaxedList(),
								},
								Validators: []validator.List{
									listvalidator.ValueStringsAre(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysqlyandex.cloud.connectionmanager.v1.MySQLConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/mysql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysql
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysql
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.mysql
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"opensearch": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.authyandex.cloud.connectionmanager.v1.OpenSearchAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.OpenSearchCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"roles": schema.ListAttribute{
													ElementType:         types.StringType,
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.roles
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.roles
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hostsyandex.cloud.connectionmanager.v1.OpenSearchCluster.Host.roles
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.List{
														listplanmodifier.UseStateForUnknown(),
														planmodifiers.NilRelaxedList(),
													},
													Validators: []validator.List{
														listvalidator.ValueStringsAre(
															stringvalidator.OneOf(converter.MapKeys(connectionmanager.OpenSearchCluster_Host_GroupRole_value)...),
														),
														listvalidator.ValueStringsAre(
															stringvalidator.OneOf(converter.MapKeys(connectionmanager.OpenSearchCluster_Host_GroupRole_value)...),
														),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.clusteryandex.cloud.connectionmanager.v1.OpenSearchCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearchyandex.cloud.connectionmanager.v1.OpenSearchConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/opensearch.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearch
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearch
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.opensearch
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"postgresql": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.authyandex.cloud.connectionmanager.v1.PostgreSQLAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.PostgreSQLCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"replica_type": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.replica_type
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.replica_type
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.replica_type
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.PostgreSQLCluster_Host_ReplicaType_value)...),
													},
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hostsyandex.cloud.connectionmanager.v1.PostgreSQLCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.PostgreSQLCluster_Host_Role_value)...),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.clusteryandex.cloud.connectionmanager.v1.PostgreSQLCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"databases": schema.ListAttribute{
								ElementType:         types.StringType,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.databases
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.databases
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.List{
									listplanmodifier.UseStateForUnknown(),
									planmodifiers.NilRelaxedList(),
								},
								Validators: []validator.List{
									listvalidator.ValueStringsAre(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresqlyandex.cloud.connectionmanager.v1.PostgreSQLConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/postgresql.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresql
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresql
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.postgresql
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"redis": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_passwordyandex.cloud.connectionmanager.v1.RedisAuth.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.authyandex.cloud.connectionmanager.v1.RedisAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.RedisCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.RedisCluster_Host_Role_value)...),
													},
												},

												"shard_name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.shard_name
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.shard_name
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hostsyandex.cloud.connectionmanager.v1.RedisCluster.Host.shard_name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"sentinel_port": schema.Int64Attribute{
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.sentinel_port
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.sentinel_port
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.sentinel_port
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Int64{
											int64planmodifier.UseStateForUnknown(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.clusteryandex.cloud.connectionmanager.v1.RedisCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"databases": schema.ListAttribute{
								ElementType:         types.Int64Type,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.databases
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.databases
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redisyandex.cloud.connectionmanager.v1.RedisConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/redis.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.List{
									listplanmodifier.UseStateForUnknown(),
									planmodifiers.NilRelaxedList(),
								},
								Validators: []validator.List{
									listvalidator.ValueInt64sAre(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redis
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redis
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.redis
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"trino": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_passwordyandex.cloud.connectionmanager.v1.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.authyandex.cloud.connectionmanager.v1.TrinoAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"coordinator": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"host": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.host
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.host
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.host
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},

											"port": schema.Int64Attribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.port
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.port
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinatoryandex.cloud.connectionmanager.v1.TrinoCluster.Coordinator.port
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Int64{
													int64planmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinator
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinator
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.coordinator
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.clusteryandex.cloud.connectionmanager.v1.TrinoCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trinoyandex.cloud.connectionmanager.v1.TrinoConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/trino.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trino
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trino
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.trino
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("valkey"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},

					"valkey": schema.SingleNestedAttribute{

						Attributes: map[string]schema.Attribute{

							"auth": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"user_password": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"password": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"lockbox_secret_key": schema.StringAttribute{
														MarkdownDescription: "Read-only. Do not fill this field in create/update requests.",
														Description: "Read-only. Do not fill this field in create/update requests." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.lockbox_secret_key
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},

													"password_generation_options": schema.SingleNestedAttribute{

														Attributes: map[string]schema.Attribute{

															"cookie": schema.StringAttribute{
																MarkdownDescription: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change.",
																Description: "Cookie is an arbitrary non-sensitive string that is saved with the\n password. When updating PasswordGenerationOptions, if the cookie passed\n in the update request differs from the cookie in the current\n PasswordGenerationOptions, the password will be re-generated. If the\n same cookie is passed, the password will not change." +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.cookie
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.String{
																	stringplanmodifier.UseStateForUnknown(),
																},
															},

															"lockbox_password_generation_options": schema.SingleNestedAttribute{

																Attributes: map[string]schema.Attribute{

																	"excluded_punctuation": schema.StringAttribute{
																		MarkdownDescription: "a string of punctuation characters to exclude from the default",
																		Description: "a string of punctuation characters to exclude from the default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.excluded_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_digits": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one 0..9 character is included in the password, true by default",
																		Description: "whether at least one 0..9 character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_digits
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_lowercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one a..z character is included in the password, true by default",
																		Description: "whether at least one a..z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_lowercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_punctuation": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below",
																		Description: "whether at least one punctuation character is included in the password, true by default\n punctuation characters by default: !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n to customize the punctuation characters, see included_punctuation and excluded_punctuation below" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"include_uppercase": schema.BoolAttribute{
																		MarkdownDescription: "whether at least one A..Z character is included in the password, true by default",
																		Description: "whether at least one A..Z character is included in the password, true by default" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.include_uppercase
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Bool{
																			boolplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"included_punctuation": schema.StringAttribute{
																		MarkdownDescription: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use",
																		Description: "If include_punctuation is true, one of these two fields (not both) may be used optionally to customize the punctuation:\n a string of specific punctuation characters to use" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.included_punctuation
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.String{
																			stringplanmodifier.UseStateForUnknown(),
																		},
																	},

																	"length": schema.Int64Attribute{
																		MarkdownDescription: "password length; by default, a reasonable length will be decided",
																		Description: "password length; by default, a reasonable length will be decided" +
																			// proto paths: +
																			// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_optionsyandex.cloud.connectionmanager.v1.LockboxPasswordGenerationOptions.length
																			"package: yandex.cloud.connectionmanager.v1\n" +
																			"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																		Optional: true,
																		Computed: true,

																		PlanModifiers: []planmodifier.Int64{
																			int64planmodifier.UseStateForUnknown(),
																		},
																	},
																},
																MarkdownDescription: "",
																Description: "" +
																	// proto paths: +
																	// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_optionsyandex.cloud.connectionmanager.v1.PasswordGenerationOptions.lockbox_password_generation_options
																	"package: yandex.cloud.connectionmanager.v1\n" +
																	"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
																Optional: true,
																Computed: true,

																PlanModifiers: []planmodifier.Object{
																	objectplanmodifier.UseStateForUnknown(),
																},
															},
														},
														MarkdownDescription: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field.",
														Description: "When creating/updating Password, the field \"password_generation_options\"\n is mutually exclusive with \"raw\". In order to switch to the\n \"password_generation_options\" you have to explicitly clear the \"raw\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.password_generation_options
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.Object{
															objectplanmodifier.UseStateForUnknown(),
														},
													},

													"raw": schema.StringAttribute{
														MarkdownDescription: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field.",
														Description: "When creating/updating Password, the field \"raw\" is mutually exclusive\n with \"password_generation_options\". In order to switch to the \"raw\"\n password you have to explicitly clear the \"password_generation_options\"\n field." +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.passwordyandex.cloud.connectionmanager.v1.Password.raw
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional:  true,
														Computed:  true,
														Sensitive: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.password
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.password
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
											},

											"user": schema.StringAttribute{
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.user
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_passwordyandex.cloud.connectionmanager.v1.ValkeyAuth.UserPasswordAuth.user
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.String{
													stringplanmodifier.UseStateForUnknown(),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_password
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.authyandex.cloud.connectionmanager.v1.ValkeyAuth.user_password
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.auth
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.auth
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.auth
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"cluster": schema.SingleNestedAttribute{

								Attributes: map[string]schema.Attribute{

									"hosts": schema.ListNestedAttribute{
										NestedObject: schema.NestedAttributeObject{

											Attributes: map[string]schema.Attribute{

												"health": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.health
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.health
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.ValkeyCluster_Host_Health_value)...),
													},
												},

												"host": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.host
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.host
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},

												"port": schema.Int64Attribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.port
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.port
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.Int64{
														int64planmodifier.UseStateForUnknown(),
													},
												},

												"role": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.role
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.role
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
													Validators: []validator.String{
														stringvalidator.OneOf(converter.MapKeys(connectionmanager.ValkeyCluster_Host_Role_value)...),
													},
												},

												"shard_name": schema.StringAttribute{
													MarkdownDescription: "",
													Description: "" +
														// proto paths: +
														// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.shard_name
														// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.shard_name
														// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hostsyandex.cloud.connectionmanager.v1.ValkeyCluster.Host.shard_name
														"package: yandex.cloud.connectionmanager.v1\n" +
														"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
													Optional: true,
													Computed: true,

													PlanModifiers: []planmodifier.String{
														stringplanmodifier.UseStateForUnknown(),
													},
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hosts
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.hosts
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.List{
											listplanmodifier.UseStateForUnknown(),
											planmodifiers.NilRelaxedList(),
										},
									},

									"sentinel_port": schema.Int64Attribute{
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.sentinel_port
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.sentinel_port
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.sentinel_port
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Int64{
											int64planmodifier.UseStateForUnknown(),
										},
									},

									"tls_params": schema.SingleNestedAttribute{

										Attributes: map[string]schema.Attribute{

											"disabled": schema.SingleNestedAttribute{

												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.disabled
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("tls"),
													),
												},
											},

											"tls": schema.SingleNestedAttribute{

												Attributes: map[string]schema.Attribute{

													"ca_certificate": schema.StringAttribute{
														MarkdownDescription: "",
														Description: "" +
															// proto paths: +
															// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tlsyandex.cloud.connectionmanager.v1.TLSConfig.ca_certificate
															"package: yandex.cloud.connectionmanager.v1\n" +
															"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
														Optional: true,
														Computed: true,

														PlanModifiers: []planmodifier.String{
															stringplanmodifier.UseStateForUnknown(),
														},
													},
												},
												MarkdownDescription: "",
												Description: "" +
													// proto paths: +
													// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_paramsyandex.cloud.connectionmanager.v1.TLSParams.tls
													"package: yandex.cloud.connectionmanager.v1\n" +
													"filename: yandex/cloud/connectionmanager/v1/common.proto\n",
												Optional: true,
												Computed: true,

												PlanModifiers: []planmodifier.Object{
													objectplanmodifier.UseStateForUnknown(),
												},
												Validators: []validator.Object{
													objectvalidator.ConflictsWith(
														path.MatchRelative().AtParent().AtName("disabled"),
													),
												},
											},
										},
										MarkdownDescription: "",
										Description: "" +
											// proto paths: +
											// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_params
											// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.clusteryandex.cloud.connectionmanager.v1.ValkeyCluster.tls_params
											"package: yandex.cloud.connectionmanager.v1\n" +
											"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
										Optional: true,
										Computed: true,

										PlanModifiers: []planmodifier.Object{
											objectplanmodifier.UseStateForUnknown(),
										},
									},
								},
								MarkdownDescription: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\".",
								Description: "When creating/updating Connection, the field \"cluster\" is mutually\n exclusive with \"managed_cluster_id\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.cluster
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.cluster
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.Object{
									objectplanmodifier.UseStateForUnknown(),
								},
							},

							"databases": schema.ListAttribute{
								ElementType:         types.Int64Type,
								MarkdownDescription: "",
								Description: "" +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.databases
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.databases
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.databases
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.List{
									listplanmodifier.UseStateForUnknown(),
									planmodifiers.NilRelaxedList(),
								},
								Validators: []validator.List{
									listvalidator.ValueInt64sAre(),
								},
							},

							"managed_cluster_id": schema.StringAttribute{
								MarkdownDescription: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\".",
								Description: "When creating/updating Connection, the field \"managed_cluster_id\" is\n mutually exclusive with \"cluster\"." +
									// proto paths: +
									// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.managed_cluster_id
									// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkeyyandex.cloud.connectionmanager.v1.ValkeyConnection.managed_cluster_id
									"package: yandex.cloud.connectionmanager.v1\n" +
									"filename: yandex/cloud/connectionmanager/v1/valkey.proto\n",
								Optional: true,
								Computed: true,

								PlanModifiers: []planmodifier.String{
									stringplanmodifier.UseStateForUnknown(),
								},
							},
						},
						MarkdownDescription: "",
						Description: "" +
							// proto paths: +
							// -> yandex.cloud.connectionmanager.v1.Connection.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkey
							// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkey
							// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.paramsyandex.cloud.connectionmanager.v1.ConnectionParams.valkey
							"package: yandex.cloud.connectionmanager.v1\n" +
							"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
						Optional: true,
						Computed: true,

						PlanModifiers: []planmodifier.Object{
							objectplanmodifier.UseStateForUnknown(),
						},
						Validators: []validator.Object{
							objectvalidator.ConflictsWith(
								path.MatchRelative().AtParent().AtName("postgresql"),
								path.MatchRelative().AtParent().AtName("mysql"),
								path.MatchRelative().AtParent().AtName("mongodb"),
								path.MatchRelative().AtParent().AtName("clickhouse"),
								path.MatchRelative().AtParent().AtName("kafka"),
								path.MatchRelative().AtParent().AtName("redis"),
								path.MatchRelative().AtParent().AtName("opensearch"),
								path.MatchRelative().AtParent().AtName("trino"),
								path.MatchRelative().AtParent().AtName("greenplum"),
							),
						},
					},
				},
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.params
					// -> yandex.cloud.connectionmanager.v1.CreateConnectionRequest.params
					// -> yandex.cloud.connectionmanager.v1.UpdateConnectionRequest.params
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.Object{
					objectplanmodifier.UseStateForUnknown(),
				},
			},

			"updated_at": schema.StringAttribute{
				MarkdownDescription: "",
				Description: "" +
					// proto paths: +
					// -> yandex.cloud.connectionmanager.v1.Connection.updated_at
					"package: yandex.cloud.connectionmanager.v1\n" +
					"filename: yandex/cloud/connectionmanager/v1/connection.proto\n",
				Computed: true,
			},
			"timeouts": timeouts.AttributesAll(ctx),
		},

		Blocks: map[string]schema.Block{},
	}
}
