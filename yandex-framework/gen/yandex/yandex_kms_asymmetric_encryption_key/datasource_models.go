// Code generated by tfgen. DO NOT EDIT.

package yandex_kms_asymmetric_encryption_key

import (
	"context"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	asymmetricencryption "github.com/yandex-cloud/go-genproto/yandex/cloud/kms/v1/asymmetricencryption"
)

type yandexKmsAsymmetricEncryptionKeyDatasourceModel struct {
	AsymmetricEncryptionKeyId types.String   `tfsdk:"asymmetric_encryption_key_id"`
	ID                        types.String   `tfsdk:"id"`
	CreatedAt                 types.String   `tfsdk:"created_at"`
	DeletionProtection        types.Bool     `tfsdk:"deletion_protection"`
	Description               types.String   `tfsdk:"description"`
	EncryptionAlgorithm       types.String   `tfsdk:"encryption_algorithm"`
	FolderId                  types.String   `tfsdk:"folder_id"`
	Labels                    types.Map      `tfsdk:"labels"`
	Name                      types.String   `tfsdk:"name"`
	Status                    types.String   `tfsdk:"status"`
	Timeouts                  timeouts.Value `tfsdk:"timeouts"`
}

func NewYandexKmsAsymmetricEncryptionKeyDatasourceModel() yandexKmsAsymmetricEncryptionKeyDatasourceModel {
	return yandexKmsAsymmetricEncryptionKeyDatasourceModel{
		AsymmetricEncryptionKeyId: types.StringNull(),
		ID:                        types.StringNull(),
		CreatedAt:                 types.StringNull(),
		DeletionProtection:        types.BoolNull(),
		Description:               types.StringNull(),
		EncryptionAlgorithm:       types.StringNull(),
		FolderId:                  types.StringNull(),
		Labels:                    types.MapNull(types.StringType),
		Name:                      types.StringNull(),
		Status:                    types.StringNull(),
	}
}

var yandexKmsAsymmetricEncryptionKeyDatasourceModelType = types.ObjectType{
	AttrTypes: map[string]attr.Type{
		"asymmetric_encryption_key_id": types.StringType,
		"id":                           types.StringType,
		"created_at":                   types.StringType,
		"deletion_protection":          types.BoolType,
		"description":                  types.StringType,
		"encryption_algorithm":         types.StringType,
		"folder_id":                    types.StringType,
		"labels":                       types.MapType{ElemType: types.StringType},
		"name":                         types.StringType,
		"status":                       types.StringType,
		"timeouts":                     timeouts.BlockAll(context.Background()).Type(),
	},
}

func flattenYandexKmsAsymmetricEncryptionKeyDatasource(ctx context.Context,
	yandexKmsAsymmetricEncryptionKeyDatasource *asymmetricencryption.AsymmetricEncryptionKey,
	state yandexKmsAsymmetricEncryptionKeyDatasourceModel,
	to timeouts.Value,
	diags *diag.Diagnostics) types.Object {
	if yandexKmsAsymmetricEncryptionKeyDatasource == nil {
		return types.ObjectNull(yandexKmsAsymmetricEncryptionKeyDatasourceModelType.AttrTypes)
	}
	value, diag := types.ObjectValueFrom(ctx, yandexKmsAsymmetricEncryptionKeyDatasourceModelType.AttrTypes, yandexKmsAsymmetricEncryptionKeyDatasourceModel{
		AsymmetricEncryptionKeyId: types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetId()),
		ID:                        types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetId()),
		CreatedAt:                 types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetCreatedAt().AsTime().Format(time.RFC3339)),
		DeletionProtection:        types.BoolValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetDeletionProtection()),
		Description:               types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetDescription()),
		EncryptionAlgorithm:       types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetEncryptionAlgorithm().String()),
		FolderId:                  types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetFolderId()),
		Labels:                    flattenYandexKmsAsymmetricEncryptionKeyLabels(ctx, yandexKmsAsymmetricEncryptionKeyDatasource.GetLabels(), state.Labels, diags),
		Name:                      types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetName()),
		Status:                    types.StringValue(yandexKmsAsymmetricEncryptionKeyDatasource.GetStatus().String()),
		Timeouts:                  to,
	})
	diags.Append(diag...)
	return value
}
