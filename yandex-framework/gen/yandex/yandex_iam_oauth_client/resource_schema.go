// Code generated by tfgen. DO NOT EDIT.

package yandex_iam_oauth_client

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/yandex-cloud/terraform-provider-yandex/pkg/planmodifiers"
)

func YandexIamOauthClientResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Description:         "An OauthClient resource.",
		MarkdownDescription: "An OauthClient resource.",
		Version:             1,
		Attributes: map[string]schema.Attribute{

			"folder_id": schema.StringAttribute{
				MarkdownDescription: "ID of the folder oauth client belongs to.",
				Description: "ID of the folder oauth client belongs to." +
					// proto paths: +
					// -> yandex.cloud.iam.v1.CreateOAuthClientRequest.folder_id
					// -> yandex.cloud.iam.v1.OAuthClient.folder_id
					"package: yandex.cloud.iam.v1\n" +
					"filename: yandex/cloud/iam/v1/oauth_client.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
				Validators: []validator.String{
					stringvalidator.LengthBetween(0, 255),
				},
			},

			"name": schema.StringAttribute{
				MarkdownDescription: "Name for the oauth client.",
				Description: "Name for the oauth client." +
					// proto paths: +
					// -> yandex.cloud.iam.v1.CreateOAuthClientRequest.name
					// -> yandex.cloud.iam.v1.OAuthClient.name
					// -> yandex.cloud.iam.v1.UpdateOAuthClientRequest.name
					"package: yandex.cloud.iam.v1\n" +
					"filename: yandex/cloud/iam/v1/oauth_client.proto\n",
				Required: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
				Validators: []validator.String{
					stringvalidator.RegexMatches(regexp.MustCompile("^([a-z]([-a-z0-9]{0,61}[a-z0-9])?)$"), "error validating regexp"),
				},
			},

			"oauth_client_id": schema.StringAttribute{
				MarkdownDescription: "ID of the OAuthClient resource to return.\n To get the oauth client ID, use a [OAuthClientService.List] request.",
				Description: "ID of the OAuthClient resource to return.\n To get the oauth client ID, use a [OAuthClientService.List] request." +
					// proto paths: +
					// -> yandex.cloud.iam.v1.DeleteOAuthClientRequest.oauth_client_id
					// -> yandex.cloud.iam.v1.GetOAuthClientRequest.oauth_client_id
					// -> yandex.cloud.iam.v1.OAuthClient.id
					// -> yandex.cloud.iam.v1.UpdateOAuthClientRequest.oauth_client_id
					"package: yandex.cloud.iam.v1\n" +
					"filename: yandex/cloud/iam/v1/oauth_client_service.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
				Validators: []validator.String{
					stringvalidator.LengthBetween(0, 50),
				},
			},

			"id": schema.StringAttribute{
				MarkdownDescription: "ID of the OAuthClient resource to return.\n To get the oauth client ID, use a [OAuthClientService.List] request.",
				Description: "ID of the OAuthClient resource to return.\n To get the oauth client ID, use a [OAuthClientService.List] request." +
					// proto paths: +
					// -> yandex.cloud.iam.v1.DeleteOAuthClientRequest.oauth_client_id
					// -> yandex.cloud.iam.v1.GetOAuthClientRequest.oauth_client_id
					// -> yandex.cloud.iam.v1.OAuthClient.id
					// -> yandex.cloud.iam.v1.UpdateOAuthClientRequest.oauth_client_id
					"package: yandex.cloud.iam.v1\n" +
					"filename: yandex/cloud/iam/v1/oauth_client_service.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
				Validators: []validator.String{
					stringvalidator.LengthBetween(0, 50),
				},
			},

			"redirect_uris": schema.ListAttribute{
				ElementType:         types.StringType,
				MarkdownDescription: "List of redirect uries allowed for the oauth client.",
				Description: "List of redirect uries allowed for the oauth client." +
					// proto paths: +
					// -> yandex.cloud.iam.v1.CreateOAuthClientRequest.redirect_uris
					// -> yandex.cloud.iam.v1.OAuthClient.redirect_uris
					// -> yandex.cloud.iam.v1.UpdateOAuthClientRequest.redirect_uris
					"package: yandex.cloud.iam.v1\n" +
					"filename: yandex/cloud/iam/v1/oauth_client.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.List{
					listplanmodifier.UseStateForUnknown(),
					planmodifiers.NilRelaxedList(),
				},
				Validators: []validator.List{
					listvalidator.ValueStringsAre(
						stringvalidator.LengthBetween(0, 1000),
					),
				},
			},

			"scopes": schema.ListAttribute{
				ElementType:         types.StringType,
				MarkdownDescription: "List of oauth scopes requested by the oauth client.",
				Description: "List of oauth scopes requested by the oauth client." +
					// proto paths: +
					// -> yandex.cloud.iam.v1.CreateOAuthClientRequest.scopes
					// -> yandex.cloud.iam.v1.OAuthClient.scopes
					// -> yandex.cloud.iam.v1.UpdateOAuthClientRequest.scopes
					"package: yandex.cloud.iam.v1\n" +
					"filename: yandex/cloud/iam/v1/oauth_client.proto\n",
				Optional: true,
				Computed: true,

				PlanModifiers: []planmodifier.List{
					listplanmodifier.UseStateForUnknown(),
					planmodifiers.NilRelaxedList(),
				},
				Validators: []validator.List{
					listvalidator.ValueStringsAre(
						stringvalidator.LengthBetween(0, 255),
					),
				},
			},

			"status": schema.StringAttribute{
				MarkdownDescription: "Current status of the oauth client.",
				Description: "Current status of the oauth client." +
					// proto paths: +
					// -> yandex.cloud.iam.v1.OAuthClient.status
					"package: yandex.cloud.iam.v1\n" +
					"filename: yandex/cloud/iam/v1/oauth_client.proto\n",
				Computed: true,
			},
			"timeouts": timeouts.AttributesAll(ctx),
		},

		Blocks: map[string]schema.Block{},
	}
}
